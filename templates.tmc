// XX FIRST (with paddle) SECOND (no paddle)
MAPKEYIO (XX, FIRST, SECOND)


6 buttons
// map key IOUMD template
//
MapKeyIOUMD(&Throttle, XXX, 
//Flaps UP (MFD mode) and Paddle
DO1,
//Flaps UP (MFD mode)
DO2,
//Flaps MVR (Flight mode) and Paddle
DO3,
//Flaps MVR (Flight mode)
DO4,
//Flaps DN (HUD mode) and Paddle
DO5,
//Flaps DN (HUD mode)
DO6);


6 buttons 1 liner
// map key IOUMD template for XXX || UP & Switch || UP || M & Switch || M || DN & Switch || DN 
MapKeyIOUMD(&Throttle, XXX, 			DO1,		DO2, 	DO3,		DO4, 	DO5,		DO6);


3 buttons
// map key UMD template
//
MapKeyUMD(&Throttle, XXX, 
//Flaps UP (FPS mode)
DO1,
//Flaps MVR (Flight mode)
DO2,
//Flaps DN (HUD mode)
DO3);

2 buttons
// map key IO template
//
MapKeyIO(&Throttle, XXX, 
//With Paddle
DO1,
//Without Paddle
DO2);

// release map key RIOUMD template
//
MapKeyRIOUMD(&Throttle, XXX, 
//Flaps UP (FPS mode) and Paddle
DO1,
//Flaps UP (FPS mode)
DO2,
//Flaps MVR (Flight mode) and Paddle
DO3,
//Flaps MVR (Flight mode)
DO4,
//Flaps DN (HUD mode) and Paddle
DO5,
//Flaps DN (HUD mode)
DO6);




 Testing PRints ****
 printf("The Stick Rotation is %d\xa",Stick_Rotation);
 printf ("Value for RotationFix(Stick_Rotation) is: %d\xa",RotationFix(Stick_Rotation));
 SetSCurve(&Joystick, JOYX, 0, 0, 0, 0, RotationFix(Stick_Rotation));
 SetSCurve(&Joystick, JOYY, 0, 0, 0, 0, RotationFix(Stick_Rotation));

 
 sc kanei headlook
 LTB anti gia trackIR kanei look back
 scx/scy view? xrot/yrot ginete view x/y
 to strafe up/down tha ginei slider

 		//code for having 2 buttons in one after short/long press
		//TEMPO(key1, key2, delay)

 
 //below to be used for controlling mouse (viewing around/augmented reality mode)
		//AXIS(DirectX axis name, increment, delay before repeat);
		//MapKey(&left, H1U, AXIS(MOUSE_Y_AXIS, -80, 20));
		//MapKey(&left, H1R, AXIS(MOUSE_Y_AXIS, 80, 20));
		//MapKey(&left, H1D, AXIS(MOUSE_X_AXIS, -80, 20));
		//MapKey(&left, H1L, AXIS(MOUSE_X_AXIS, 80, 20));
		//MapKey(&left, H1U, REXEC(0, 2, "DXAxis(MOUSE_Y_AXIS, -1);"));
		//MapKey(&left, H1R, REXEC(1, 2, "DXAxis(MOUSE_X_AXIS, 1);"));
		//MapKey(&left, H1D, REXEC(0, 2, "DXAxis(MOUSE_Y_AXIS, 1);"));
		//MapKey(&left, H1L, REXEC(1, 2, "DXAxis(MOUSE_X_AXIS, -1);"));
		
		
				
				//MapKeyIO(&right, TS3, PULSE + Targeting_Cycle_Back_Friendly, PULSE + Targeting_Cycle_Back_Hostile);

// for switching ts1 weapon group MapKey(&Joystick, S1, SEQ(CHAIN(EXEC("ActKey(PULSE+KEYON+LED(&Throttle, LED_ONOFF, LED_CURRENT-LED1+LED2));"),EXEC("MapKey(&Joystick, TG1, CHAIN(Weapons_Fire_G2, Systems_IFCS_ESP));")),CHAIN(EXEC("ActKey(PULSE+KEYON+LED(&Throttle, LED_ONOFF, LED_CURRENT+LED1+LED2));"),EXEC("MapKey(&Joystick, TG1, CHAIN(Weapons_Fire_G3, Systems_IFCS_ESP));")),CHAIN(EXEC("ActKey(PULSE+KEYON+LED(&Throttle, LED_ONOFF, LED_CURRENT-LED1-LED2));"),EXEC("MapKey(&Joystick, TG1, CHAIN(Weapons_Fire_G4, Systems_IFCS_ESP));")),CHAIN(EXEC("ActKey(PULSE+KEYON+LED(&Throttle, LED_ONOFF, LED_CURRENT+LED1-LED2));"),EXEC("MapKey(&Joystick, TG1, CHAIN(Weapons_Fire_G1, Systems_IFCS_ESP));"))));			
	
			
// 1.3 Center Joystick Rotation
				// Center-Mounted Stick rotation
				//RotateDXAxis(DX_X_AXIS, DX_Y_AXIS, Stick_Rotation);
				//not used by default (Center stick rotation affects all pitch/roll input controls)

			// 1.3 Mouse Use on Warthog Throttle (slew control)
			//	MapAxis(&Throttle, SCX, MOUSE_X_AXIS, AXIS_NORMAL, MAP_RELATIVE);
			//	MapAxis(&Throttle, SCY, MOUSE_Y_AXIS, AXIS_NORMAL, MAP_RELATIVE);


			//	SetSCurve(&Throttle, SCX, 0, Mouse_Deadzone/2, 0, Mouse_Curve, Mouse_Scale);
			//	SetSCurve(&Throttle, SCY, 0, Mouse_Deadzone, 0, Mouse_Curve, Mouse_Scale);

// SC used as Mouse Click with paddle, else toggles Mouse Mode (whatver its called now)
			//	MapKeyIO(&Throttle, SC, Flight_Mouse_Mode_Toggle, MOUSE_LEFT); // trying new 2.6 definitions of mouse mode used to be look ahead?
			//	MapKeyIO (&Throttle, SC, PULSE + MOUSE_LEFT, SEQ(EXEC ("HUD_Mode_Engage();"),EXEC ("HUD_Mode_Disengage();")));