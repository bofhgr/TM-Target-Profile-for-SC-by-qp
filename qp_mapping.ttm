//*****************************************************************************************************************
//	STAR CITIZEN TARGET Profile by qp
//		Supports the below combinations of Thrustmaster products:
//		- Thrustmaster Warthog HOTAS (Fully Supported)
//		- Thrustmaster Rudder Pedals (Fully Supported)
//		- Thrustmaster TM16000 Dual sticks (Fully Supported)
//		
//	Written by qp
// 		https://robertsspaceindustries.com/citizens/q-p
//	To support future development of this script and request features go to:
//		https://www.patreon.com/qp
//
//*****************************************************************************************************************
//
//*****************************************************************************************************************
//DO NOT EDIT THIS FILE UNLESS YOU KNOW WHAT YOU ARE DOING!
//USER-CUSTOMISABLE SETTINGS ARE IN qp_custom_settings.tmh file
//*****************************************************************************************************************


// This file contains all the keyboard and Direct-X Button mappings for Star Citizen
// My goal is to keep as much of the default k/m bindings that come with the game intact, and had to make a few adjustments to make sure everything works the same across all device combinations
// Comments on this file are a work in progress :)

// This is based on 3.0 PTU-695052 build
	// Controls that are different from defaults
	// 2D UI Cursor is now R_ALT + / (is R_ALT by default) This is because R_ALT is used as modifier for trackIR reset and others


// Flight
	define Flight_QD_Engage DX15
	define Flight_QD_HUD 'b' // b dismisses QT, holding b engages QD
	define Flight_Eject DX24
	define Flight_Auto_Land 'n' // hold
	define Flight_Landing_Mode 'n' // tap
	//define Flight_Landing_Request DX14 // not used
	//define Flight_Mode_Switch 'v' // deprecated as of 2.6
	define Flight_Match_Target_Velocity DX13
	define Flight_Self_Destruct L_ALT + BSP //needs to hold for self-destruct, does not work correctly in latest 3.0 builds
	//define Flight_Mouse_Mode_Toggle L_ALT + ',' //old deprecated
	define Flight_Cycle_Mouse_Move_Mode L_ALT + ',' //Cycle Mouse Move Mode <-- should be on by default for joystick flight?
	define Flight_Cycle_Mouse_Aim_Mode R_SHIFT //Cycle Mouse Aim Mode
	define Flight_Mouse_Move_Mode R_ALT + ',' // This is not mapped by default in 3.0 <-- I need this for joysticks?
	define Flight_Ready_Mode '8' 
	define Flight_Swap_Roll_Yaw L_ALT + '.'
	//define WTF_BUG L_ALT + 'm'
	
// Weapons
	define Weapons_Fire_G1 DX1
	define Weapons_Fire_G2 DX2
	define Weapons_Fire_G3 DX3
	define Weapons_Fire_G4 DX4
	define Weapons_Missile DX5
	define Weapons_Lock_Missile DX29
	define Weapons_Reticle_Mode DX12 
	define Weapons_Gimble_Lock DX25
	define Weapons_Countermeasure_Launch DX16
	define Weapons_Countermeasure_Change DX17
	
// Targeting
	define Targeting_Focus_Reticle 'r'
	define Targeting_Cycle_Pinned_Target 'o'
	define Targeting_Cycle_Back_Pinned_Target 'l'
	define Targeting_Nearest_Hostile 't'
	define Targeting_Pin_Target 'p'
	define Targeting_Cycle_Hostile 'y'
	define Targeting_Cycle_Back_Hostile 'h'
	define Targeting_Cycle_Friendly 'u'
	define Targeting_Cycle_Back_Friendly 'j'
	define Targeting_Cycle_All 'i'
	define Targeting_Cycle_Back_All 'k'
	define Targeting_Scan_Mode TAB //used for Scanning Mode Toggle and Scanning Mode - Radar Pulse
	//define Targeting_Scan_Mode_Focus_Target MOUSE_LEFT
	//define Targeting_Scan_Mode_Tag_Target MOUSE_MIDDLE
	
// Shields
	define Shields_Reset KP5
	define Shields_Transfer_Forward KP8
	define Shields_Transfer_Backward KP2
	define Shields_Transfer_Left KP4
	define Shields_Transfer_Right KP6
	define Shields_Transfer_Top KP7
	define Shields_Transfer_Bottom KP9
	
// Systems
	define Systems_Power_Weapons F5
	define Systems_Power_Shields F6
	define Systems_Power_Engines F7
	define Systems_Toggle_Weapons '7'
	define Systems_Toggle_Shields '6'
	define Systems_Toggle_Engines '4'
	define Systems_Toggle_Power '5' // New in 3.0
	define Systems_Power_Reset F8
	define Systems_IFCS_Decouple DX28
	define Systems_IFCS_GSafe DX10
	define Systems_IFCS_COMSTAB DX11
	define Systems_IFCS_ESP_Toggle DX8
	define Systems_IFCS_ESP DX9
	define Systems_Toggle_Lights '3'
	define Systems_Radar_Range ','
	define Systems_Cooler_Increase_Rate L_ALT + KP8
	define Systems_Cooler_Decrease_Rate L_ALT + KP7
	define Systems_Power_Decrease L_ALT + KP4
	define Systems_Power_Increase L_ALT + KP5
	define Systems_Open_All_Doors '9'
	define Systems_Close_All_Doors '9'
	define Systems_Lock_All_Doors '0'
	define Systems_Unlock_All_Doors '0'
	define Systems_PIBS '.' //personal identification broadcast system

// HUD
	define HUD_Up USB[0x52] // Up Arrow
	define HUD_Down USB[0x51] // Down Arrow
	define HUD_Left USB[0x50] // Left Arrow
	define HUD_Right USB[0x4F] // Right Arrow
	define HUD_Select USB[0x09] // f
	define HUD_Accept USB[0x28] // Enter
	define HUD_HUDMode F3
	define HUD_Show_Shields F8
	define HUD_Show_Power F7
	define HUD_Show_Weapons F6
	define HUD_Show_Overview F5
	define HUD_Cancel USB[0x15] // r
	define HUD_Screen_Left USB[0x14] // q
	define HUD_Screen_Right USB[0x08] // e	
	define HUD_MFD_Up 'w'
	define HUD_MFD_Down 's'
	define HUD_MFD_Left 'a'
	define HUD_MFD_Right 'd'
	define HUD_Show_Mouse_Cursor R_ALT + '/' //changed from 3.0 default (was R_ALT)
	
// Movement
	define Movement_Boost DX21
	define Movement_Afterburner DX22
	define Movement_Break DX19
	define Movement_Strafe_Up SPC
	define Movement_Strafe_Down L_CTL
	define Movement_Strafe_Right 'd'
	define Movement_Strafe_Left 'a'
	define Movement_Strafe_Forward 'w'
	define Movement_Strafe_Backward 's'
	define Movement_Roll_Left 'q'
	define Movement_Roll_Right 'e'
	define Movement_Throttle_Zero DX18
	
// Views
	
	//define View_Head_Tracking L_ALT + 'r' // depricated use target focus ** check to see nowhere used
	define View_Look_Ahead L_ALT + 'm' // should be same as centering head tracking?
	define View_Switch F4 // *** need to add hold functions for camera director shit
	define View_Free_Look 'z' 	// free look mode in xml
	define View_Zoom_In DX6
	define View_Zoom_Out DX7
	define View_Look_Behind DX23
	define View_Mobiglass F1 
	define View_AR_Mode 'f'
	define View_Chat F12
	define View_Contacts F11
	define View_Camera_Mode F3 // 
	define View_Map F2 // HOME // USB[0x4A] //Home
	define View_Scoreboard F1
	define View_Look_Up DXHATUP
	define View_Look_Down DXHATDOWN
	define View_Look_Left DXHATLEFT
	define View_Look_Right DXHATRIGHT
	
// Camera
	define Camera_Target_Offset_Up UARROW // Y offset Pos
	define Camera_Target_Offset_Left LARROW // X offset Neg
	define Camera_Target_Offset_Right RARROW // X offset Pos
	define Camera_Target_Offset_Down DARROW // Y offset Neg
	define Camera_Reset_Previous_View USB[0x55] // *
	define Camera_DoF_Increase USB[0x57] // +
	define Camera_DoF_Decrease USB[0x56] // -
	define Camera_Background_Blur_Increase USB[0x4A] // Home //DoF Increase
	define Camera_Background_Blur_Decrease USB[0x4D] // End //DoF Decrease
	define Camera_Strafe_Up PGUP // Z offset Pos
	define Camera_Strafe_Down PGDN // Z offset Neg
	define Camera_Zoom_In DX6
	define Camera_Zoom_Out DX7
	define Camera_Toggle_Orbit_Cam USB[0x1D] // z


	// 1.1 Axis Assignment - Rotation Axis
	//DirectX gives us 8 total Axis to play with
	//So we'll use 6 degrees of freedom mapped to first 6 axis and also Throttle and Slider axis
	// https://en.wikipedia.org/wiki/Six_degrees_of_freedom
	// https://en.wikipedia.org/wiki/Aircraft_principal_axes
		// X - Turn Left/Right (Yaw)
		// Y - Rotate Forwards/Backwards (Pitch)
		// Z - Rotate Left/Right (Roll)
		// XROT - Move Left/Right (Sway)
		// YROT - Move Forwards/Backwards (Surge)
		// ZROT - Move Up/Down (Heave)
		// SLIDER - Controls Zoom in-out
		// THROTTLE - Controls Throttle 0-100

	
// Direct X Button Assignments
//DXHAT Assigned to look UP/DOWN/LEFT/RIGHT
	//DXAxis - 8 total Axis
	// X - Controls Yaw
	// Y - Controls Pitch
	// Z - Controls Roll
	// XROT - Strafe L/R
	// YROT - Strafe F/B
	// ZROT - Strafe U/D
	// SLIDER - TrackIR Zoom
	// THROTTLE - Throttle 0-100
// Map SCX/Y to mouse?
	// DX1 Fire G1
	// DX2 Fire G2
	// DX3 Fire G3
	// DX4 Fire G4
	// DX5 Lock/Fire Missiles
	// DX6 Zoom In
	// DX7 Zoom Out
	// DX8 ESP Pulse
	// DX9 ESP Hold   ***** not needed after ESP fix
	// DX10 GSafe
	// DX11 COMSTAB
	// DX12 Reticle Mode
	// DX13 Match Target Velocity
	// DX14 Landing Request
	// DX15 Engage QD
	// DX16 CM Launch
	// DX17 CM Change
	// DX18 Zero Throttle
	// DX19 Brake
	// DX21 Boost
	// DX22 Afterburner
	// DX23 Look Behind
	// DX24 Eject
	// DX25 Gimble Lock
	// DX26 Target Reticle Focus // reverted to 'r' default
	// DX27 Target_Head_Tracking
	// DX28 Systems_IFCS_Decouple
	// DX29 Weapons_Lock_Missile
	// DX30 ** Reserved
	// DX31 ** Reserved
	// DX32 ** Reserved
	
// End of File
// qp
// .